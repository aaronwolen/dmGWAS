% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dms.R
\name{dms}
\alias{dms}
\title{Dense module search function}
\usage{
dms(network, geneweight, expr1, expr2 = NULL, d = 1, r = 0.1,
  lambda = "default")
}
\arguments{
\item{network}{A data frame containing a symbolic edge list of the PPI
network}

\item{geneweight}{A data frame containing two columns: the first is unique
gene identifier (should be coordinate with the node symbol used in PPI);
the second is gene-based p-value derived from GWAS}

\item{expr1}{A data frame containing gene expression data from case samples.
The first column is gene identifier (should be coordinate with the node
symbol used in PPI}

\item{expr2}{A data frame containing gene expression data from control
samples. The first column should be the same as expr1}

\item{d}{An integer used to define the order of neighbour genes to be
searched. This parameter is always set up as 1 in dmGWAS_3.0, but could be
1 or 2 in dmGWAS_1.0 and dmGWAS_2.X}

\item{r}{A float indicating the cut-off for increment during module expanding
process. Greater r will generate smaller module. Default is 0.1.}

\item{lambda}{A float between 0 and 1 to balance node and edge weights.
  dmGWAS_NEW will estimate it by default}
}
\value{
\code{dms} returns a list containing relevant data and results,
  including:

 \tabular{ll}{
   \code{GWPI} \tab the edge-weighted network used for searching \cr
   \code{genesets} \tab list of genes comprising each dense module, named for the seed gene \cr
   \code{genesets.length.null.dis} \tab randomization data for normalization \cr
   \code{module.score.matrix} \tab contains Sm and Sn \cr
 }


A resultant file '*.RData' is also automatically saved in the working folder
for future record.
}
\description{
\code{\link{dms}} constructs a node- and edge-weighted PPI network, performs
dense module searching, generates simulation data from random networks,
normalizes module scores using simulation data, removes un-qualified modules,
and orders resultant modules according to their significance.
}
\examples{
\dontrun{
 res.list <- dms(network, geneweight, expr1, expr2, r=0.1)
}
}

